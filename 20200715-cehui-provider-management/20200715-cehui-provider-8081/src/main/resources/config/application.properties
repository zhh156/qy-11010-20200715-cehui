server.port=8081
server.servlet.context-path=/

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/erqi?characterEncoding=utf-8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=123123
spring.datasource.url=jdbc:mysql://120.78.182.121:3306/qy110?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=Aa.123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

mybatis.type-aliases-package=com.aaa.model
mybatis.mapper-locations=classpath:mapper/*.xml

#provider向eureka中进行注册
spring.application.name=cehui-interface-provider
eureka.client.service-url.defaultZone=http://eureka01:6081/eureka/,http://eureka02:6082/eureka/,http://eureka03:6083/eureka/
eureka.instance.instance-id=cehui-interface-provider-8081
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=8
#往eureka中进行注册的细节
eureka.instance.prefer-ip-address=true
info.autor.name=Zhao.Hhuan
info.project.description=cehui-interface-provider
info.project.port=8081
info.company.name=AAA EDUCATION
# mapper中的日志
logging.level.com.aaa.mapper=debug

# 下面的配置比较常用
# 当项目运行的时候，会自动加载sql文件，去生成数据库表以及表数据（前提是你的数据库必须存在）
# 初始化数据库
# 初始化的表合表中的数据官方的意思是让我们分开写，但是合在一起写也可以
# 官方的意思schema只能让你初始化表
spring.datasource.schema=classpath:sql/erqi.sql
# data才是初始化数据用的
#spring.datasource.data=
# always:每次启动项目的时候都会加载sql文件，初始化数据库（一般在第一次开启项目的时候会使用，防止数据库中没有数据表）
# never:每次启动项目的时候都不会加载sql文件
# embedded：加载内存数据库（非关系型数据库（redis....）,一般除了第一次开启之后都用这个）
spring.datasource.initialization-mode=never

# 通用mapper的配置
# 因为通用mapper并不止支持mysql，所以当需要使用自增主键的时候需要指定数据库的类型
mapper.identity=MYSQL
# 配置通用mapper的基础类
mapper.mappers=tk.mybatis.mapper.common.Mapper
# <update> update set user where 1 = 1 <if test='username != null'> and username = #{username} </if> </update>
mapper.not-empty=true
# 因为项目中大量使用到了枚举，但是通用mapper并不认识枚举，所以需要把枚举让它自动转换为基础类型处理
mapper.enum-as-simple-type=true

#pageHelper分页插件
#配置mysql的方言
pagehelper.helper-dialect=mysql
#为了支持startPage(Object params)方法，这里使用的是默认值
pagehelper.params=count=countSql
#分页合理化参数，默认值时false。当该参数设置为true是，pageNum<=0时会查询第一页，pageNum>pages(超过总数时)，会查询最后一页。默认false时，直接根据参数进行查询
pagehelper.reasonable=false
# 支持通过Mapper接口参数来传递分页参数，默认是false，分页插件会从查询方法的参数值中，自动根据上面的params配置的字段中取值，
# 查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true

